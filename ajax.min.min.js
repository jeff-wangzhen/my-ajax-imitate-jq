var Ajax = {};
(function(i) {
    function j(e) {
        var b;
        var c;
        var a;
        if (window.XMLHttpRequest) {
            c = new XMLHttpRequest();
        } else {
            c = new ActiveXObject("Microsoft.XMLHTTP");
        }
        var d = { type: "GET", processData: true, contentType: "application/x-www-form-urlencoded" };
        e = g(d, e);
        if (e.contentType.replace(/(^\s*)|(\s*$)/g, "") === "application/json") {
            e.processData = false;
        }
        c = g(c, e.xhrFields);
        if (e.type.toUpperCase() === "GET") {
            b = h(g(f(e.url), e.data));
            if (e.url.indexOf("?") !== -1) {
                e.url = e.url.substr(0, e.url.indexOf("?"));
            }
            c.open("GET", e.url + "?" + b, true);
            c.send(null);
        } else {
            c.open(e.type.toUpperCase(), e.url, true);
            c.setRequestHeader("Content-type", e.contentType);
            if (e.processData) {
                b = h(e.data);
            } else {
                b = e.data;
            }
            c.send(b);
        }
        c.onreadystatechange = function() {
            var m = "";
            if (c.readyState === 4) {
                clearInterval(a);
                if ((c.status >= 200 && c.status < 300) || c.status === 304) {
                    if (c.status === 304) {
                        m = "notmodified";
                    } else {
                        m = "success";
                    }
                    try {
                        e.success(JSON.parse(c.responseText), m);
                    } catch (n) {
                        e.success(c.responseText, m);
                    }
                } else {
                    m = "error";
                    if (typeof e.error === "function") {
                        e.error(c, m);
                    }
                }
                if (typeof e.complete === "function") {
                    e.complete(c, m);
                }
            }
        };
        if (typeof e.timeout === "number") {
            a = setTimeout(function() {
                if (typeof e.error === "function") {
                    e.error(c, "timeout");
                    e.complete(c, "timeout");
                }
                if (typeof e.complete === "function") {
                    e.complete(c, "timeout");
                }
                c.abort();
            }, e.timeout);
        }
    }
    function g(a) {
        if (a == null) {
            throw new TypeError("Cannot convert undefined or null to object");
        }
        a = Object(a);
        for (var d = 1; d < arguments.length; d++) {
            var b = arguments[d];
            if (b != null) {
                for (var c in b) {
                    if (Object.prototype.hasOwnProperty.call(b, c)) {
                        a[c] = b[c];
                    }
                }
            }
        }
        return a;
    }
    function f(c) {
        var p = [];
        var b = c.split("?");
        p[0] = b[0];
        if (b[1]) {
            p[0] = b[1];
        }
        p = p[0].split("&");
        var q = {};
        var d = 0;
        var o;
        var e;
        var a;
        while (d < p.length) {
            o = p[d].split("=");
            e = o[0];
            a = o[1];
            q[e] = a;
            d++;
        }
        return q;
    }
    function h(s, c) {
        if (c === "undefined") {
            c = false;
        }
        var r = /\[\]$/,
            d = Object.prototype,
            t = Array.prototype,
            u = t.forEach,
            b = d.toString;
        function w(k) {
            return b.call(k) === "[object Function]";
        }
        function e(k) {
            return b.call(k) === "[object Array]";
        }
        function a(k) {
            return b.call(k) === "[object Object]";
        }
        function v(m, k, n, l) {
            var o;
            if (e(k)) {
                u.call(k, function(q, p) {
                    if (n || r.test(m)) {
                        l(m, q);
                    } else {
                        v(m + "[" + (typeof q === "object" && q != null ? p : "") + "]", q, n, l);
                    }
                });
            } else {
                if (!n && a(k)) {
                    for (o in k) {
                        v(m + "[" + o + "]", k[o], n, l);
                    }
                } else {
                    l(m, k);
                }
            }
        }
        function x(o, m) {
            var l,
                n = [],
                k = function(q, z) {
                    var p = w(z) ? z() : z;
                    n[n.length] = encodeURIComponent(q) + "=" + encodeURIComponent(p == null ? "" : p);
                };
            if (e(o)) {
                u.call(o, function(p) {
                    k(p.name, p.value);
                });
            } else {
                for (l in o) {
                    v(l, o[l], m, k);
                }
            }
            return n.join("&");
        }
        return x(s, c);
    }
    i = {
        get: function(c, b, a) {
            return j({ url: c, data: b, success: a });
        },
        post: function(c, b, a) {
            return j({ type: "POST", url: c, data: b, success: a });
        },
        ajax: j,
        param: h,
        urlorQuerytoObject: f,
        mergeObject: g
    };
    if (typeof window.$ === "undefined") {
        window.$ = i;
    }
})(Ajax);
